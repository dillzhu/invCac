name: Build and Release

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
  release:
    types: [ created ]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up CMake
      uses: jwlawson/actions-setup-cmake@v1.13
      with:
        cmake-version: '3.x'

    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y g++

    - name: Install dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install cmake

    - name: Install dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install make

    - name: Run build script
      run: |
        ./build.sh

    - name: Archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: invCac-${{ matrix.os }}
        path: build/invCac-*

  release:
    needs: build
    if: github.event_name == 'release' && github.event.action == 'created'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Download all artifacts
      uses: actions/download-artifact@v2
      with:
        path: artifacts

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload release assets
      uses: csexton/release-asset-action@v2
      with:
        pattern: "artifacts/**/*"
        github-token: ${{ secrets.GITHUB_TOKEN }}
        release-url: ${{ steps.create_release.outputs.upload_url }}
